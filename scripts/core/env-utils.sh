#!/bin/bash

# MoneyWise Environment Utilities
# Provides common environment variable handling functions
# Handles: env file operations, variable extraction, and validation

# Load core utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MODULE_LOADER="$SCRIPT_DIR/module-loader.sh"

# Load module loader first
if [ ! -f "$MODULE_LOADER" ]; then
    echo "❌ Error: Module loader not found at $MODULE_LOADER"
    exit 1
fi

source "$MODULE_LOADER"

# Load environment file
load_env_file() {
    local env_file="$1"

    if [ ! -f "$env_file" ]; then
        print_error "Environment file not found: $env_file"
        return 1
    fi

    # Source the .env file to load variables
    if source "$env_file" 2>/dev/null; then
        print_success "Environment variables loaded from: $env_file"
        return 0
    else
        print_error "Failed to load environment file: $env_file"
        print_warning "Check file syntax and permissions"
        return 1
    fi
}

# Extract value from environment file
extract_env_value() {
    local env_file="$1"
    local key="$2"
    local default_value="${3:-}"

    if [ ! -f "$env_file" ]; then
        echo "$default_value"
        return 1
    fi

    local value
    value=$(grep "^${key}=" "$env_file" | cut -d '=' -f2- | tr -d '"' || echo "$default_value")
    echo "$value"
}

# Create default environment file
create_default_env() {
    local env_file="$1"
    local template="$2"

    if [ -f "$env_file" ]; then
        print_warning "Environment file already exists: $env_file"
        print_info "Skipping creation to preserve existing configuration"
        return 0
    fi

    if [ -f "$template" ]; then
        cp "$template" "$env_file"
    else
        # Create minimal default .env if no template provided
        cat > "$env_file" << 'EOF'
# MoneyWise Default Configuration
# Generated by env-utils.sh

# Database Connection
DATABASE_URL=postgresql://postgres:password@localhost:5432/moneywise

# Application Settings
RUST_LOG=info
HOST=127.0.0.1
PORT=3000
EOF
    fi

    print_success "Default environment file created: $env_file"
    print_warning "Please review and update configuration as needed"
    return 0
}

# Auto-initialization when sourced
if [ "${BASH_SOURCE[0]}" != "${0}" ]; then
    print_success "Environment utilities initialized successfully"
fi
